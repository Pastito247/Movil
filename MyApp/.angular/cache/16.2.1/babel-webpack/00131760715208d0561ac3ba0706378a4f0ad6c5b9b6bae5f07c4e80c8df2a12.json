{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/evert/OneDrive/Documentos/GitHub/Movil/MyApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Capacitor } from '@capacitor/core';\nimport { LatLngBounds, MapType } from './definitions';\nimport { CapacitorGoogleMaps } from './implementation';\nclass MapCustomElement extends HTMLElement {\n  constructor() {\n    super();\n  }\n  connectedCallback() {\n    this.innerHTML = '';\n    if (Capacitor.getPlatform() == 'ios') {\n      this.style.overflow = 'scroll';\n      this.style['-webkit-overflow-scrolling'] = 'touch';\n      const overflowDiv = document.createElement('div');\n      overflowDiv.style.height = '200%';\n      this.appendChild(overflowDiv);\n    }\n  }\n}\ncustomElements.define('capacitor-google-map', MapCustomElement);\nexport class GoogleMap {\n  constructor(id) {\n    this.element = null;\n    this.resizeObserver = null;\n    this.handleScrollEvent = () => this.updateMapBounds();\n    this.id = id;\n  }\n  /**\n   * Creates a new instance of a Google Map\n   * @param options\n   * @param callback\n   * @returns GoogleMap\n   */\n  static create(options, callback) {\n    return _asyncToGenerator(function* () {\n      const newMap = new GoogleMap(options.id);\n      if (!options.element) {\n        throw new Error('container element is required');\n      }\n      if (options.config.androidLiteMode === undefined) {\n        options.config.androidLiteMode = false;\n      }\n      newMap.element = options.element;\n      newMap.element.dataset.internalId = options.id;\n      const elementBounds = yield GoogleMap.getElementBounds(options.element);\n      options.config.width = elementBounds.width;\n      options.config.height = elementBounds.height;\n      options.config.x = elementBounds.x;\n      options.config.y = elementBounds.y;\n      options.config.devicePixelRatio = window.devicePixelRatio;\n      if (Capacitor.getPlatform() == 'android') {\n        newMap.initScrolling();\n      }\n      if (Capacitor.isNativePlatform()) {\n        options.element = {};\n        const getMapBounds = () => {\n          var _a, _b;\n          const mapRect = (_b = (_a = newMap.element) === null || _a === void 0 ? void 0 : _a.getBoundingClientRect()) !== null && _b !== void 0 ? _b : {};\n          return {\n            x: mapRect.x,\n            y: mapRect.y,\n            width: mapRect.width,\n            height: mapRect.height\n          };\n        };\n        const onDisplay = () => {\n          CapacitorGoogleMaps.onDisplay({\n            id: newMap.id,\n            mapBounds: getMapBounds()\n          });\n        };\n        const onResize = () => {\n          CapacitorGoogleMaps.onResize({\n            id: newMap.id,\n            mapBounds: getMapBounds()\n          });\n        };\n        const ionicPage = newMap.element.closest('.ion-page');\n        if (Capacitor.getPlatform() === 'ios' && ionicPage) {\n          ionicPage.addEventListener('ionViewWillEnter', () => {\n            setTimeout(() => {\n              onDisplay();\n            }, 100);\n          });\n          ionicPage.addEventListener('ionViewDidEnter', () => {\n            setTimeout(() => {\n              onDisplay();\n            }, 100);\n          });\n        }\n        const lastState = {\n          width: elementBounds.width,\n          height: elementBounds.height,\n          isHidden: false\n        };\n        newMap.resizeObserver = new ResizeObserver(() => {\n          if (newMap.element != null) {\n            const mapRect = newMap.element.getBoundingClientRect();\n            const isHidden = mapRect.width === 0 && mapRect.height === 0;\n            if (!isHidden) {\n              if (lastState.isHidden) {\n                if (Capacitor.getPlatform() === 'ios' && !ionicPage) {\n                  onDisplay();\n                }\n              } else if (lastState.width !== mapRect.width || lastState.height !== mapRect.height) {\n                onResize();\n              }\n            }\n            lastState.width = mapRect.width;\n            lastState.height = mapRect.height;\n            lastState.isHidden = isHidden;\n          }\n        });\n        newMap.resizeObserver.observe(newMap.element);\n      }\n      // small delay to allow for iOS WKWebView to setup corresponding element sub-scroll views ???\n      yield new Promise((resolve, reject) => {\n        setTimeout( /*#__PURE__*/_asyncToGenerator(function* () {\n          try {\n            yield CapacitorGoogleMaps.create(options);\n            resolve(undefined);\n          } catch (err) {\n            reject(err);\n          }\n        }), 200);\n      });\n      if (callback) {\n        const onMapReadyListener = yield CapacitorGoogleMaps.addListener('onMapReady', data => {\n          if (data.mapId == newMap.id) {\n            callback(data);\n            onMapReadyListener.remove();\n          }\n        });\n      }\n      return newMap;\n    })();\n  }\n  static getElementBounds(element) {\n    return _asyncToGenerator(function* () {\n      return new Promise(resolve => {\n        let elementBounds = element.getBoundingClientRect();\n        if (elementBounds.width == 0) {\n          let retries = 0;\n          const boundsInterval = setInterval(function () {\n            if (elementBounds.width == 0 && retries < 30) {\n              elementBounds = element.getBoundingClientRect();\n              retries++;\n            } else {\n              if (retries == 30) {\n                console.warn('Map size could not be determined');\n              }\n              clearInterval(boundsInterval);\n              resolve(elementBounds);\n            }\n          }, 100);\n        } else {\n          resolve(elementBounds);\n        }\n      });\n    })();\n  }\n  /**\n   * Enable touch events on native map\n   *\n   * @returns void\n   */\n  enableTouch() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      return CapacitorGoogleMaps.enableTouch({\n        id: _this.id\n      });\n    })();\n  }\n  /**\n   * Disable touch events on native map\n   *\n   * @returns void\n   */\n  disableTouch() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      return CapacitorGoogleMaps.disableTouch({\n        id: _this2.id\n      });\n    })();\n  }\n  /**\n   * Enable marker clustering\n   *\n   * @param minClusterSize - The minimum number of markers that can be clustered together.\n   * @defaultValue 4\n   *\n   * @returns void\n   */\n  enableClustering(minClusterSize) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      return CapacitorGoogleMaps.enableClustering({\n        id: _this3.id,\n        minClusterSize\n      });\n    })();\n  }\n  /**\n   * Disable marker clustering\n   *\n   * @returns void\n   */\n  disableClustering() {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      return CapacitorGoogleMaps.disableClustering({\n        id: _this4.id\n      });\n    })();\n  }\n  /**\n   * Adds a marker to the map\n   *\n   * @param marker\n   * @returns created marker id\n   */\n  addMarker(marker) {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      const res = yield CapacitorGoogleMaps.addMarker({\n        id: _this5.id,\n        marker\n      });\n      return res.id;\n    })();\n  }\n  /**\n   * Adds multiple markers to the map\n   *\n   * @param markers\n   * @returns array of created marker IDs\n   */\n  addMarkers(markers) {\n    var _this6 = this;\n    return _asyncToGenerator(function* () {\n      const res = yield CapacitorGoogleMaps.addMarkers({\n        id: _this6.id,\n        markers\n      });\n      return res.ids;\n    })();\n  }\n  /**\n   * Remove marker from the map\n   *\n   * @param id id of the marker to remove from the map\n   * @returns\n   */\n  removeMarker(id) {\n    var _this7 = this;\n    return _asyncToGenerator(function* () {\n      return CapacitorGoogleMaps.removeMarker({\n        id: _this7.id,\n        markerId: id\n      });\n    })();\n  }\n  /**\n   * Remove markers from the map\n   *\n   * @param ids array of ids to remove from the map\n   * @returns\n   */\n  removeMarkers(ids) {\n    var _this8 = this;\n    return _asyncToGenerator(function* () {\n      return CapacitorGoogleMaps.removeMarkers({\n        id: _this8.id,\n        markerIds: ids\n      });\n    })();\n  }\n  addPolygons(polygons) {\n    var _this9 = this;\n    return _asyncToGenerator(function* () {\n      const res = yield CapacitorGoogleMaps.addPolygons({\n        id: _this9.id,\n        polygons\n      });\n      return res.ids;\n    })();\n  }\n  addPolylines(polylines) {\n    var _this10 = this;\n    return _asyncToGenerator(function* () {\n      const res = yield CapacitorGoogleMaps.addPolylines({\n        id: _this10.id,\n        polylines\n      });\n      return res.ids;\n    })();\n  }\n  removePolygons(ids) {\n    var _this11 = this;\n    return _asyncToGenerator(function* () {\n      return CapacitorGoogleMaps.removePolygons({\n        id: _this11.id,\n        polygonIds: ids\n      });\n    })();\n  }\n  addCircles(circles) {\n    var _this12 = this;\n    return _asyncToGenerator(function* () {\n      const res = yield CapacitorGoogleMaps.addCircles({\n        id: _this12.id,\n        circles\n      });\n      return res.ids;\n    })();\n  }\n  removeCircles(ids) {\n    var _this13 = this;\n    return _asyncToGenerator(function* () {\n      return CapacitorGoogleMaps.removeCircles({\n        id: _this13.id,\n        circleIds: ids\n      });\n    })();\n  }\n  removePolylines(ids) {\n    var _this14 = this;\n    return _asyncToGenerator(function* () {\n      return CapacitorGoogleMaps.removePolylines({\n        id: _this14.id,\n        polylineIds: ids\n      });\n    })();\n  }\n  /**\n   * Destroy the current instance of the map\n   */\n  destroy() {\n    var _this15 = this;\n    return _asyncToGenerator(function* () {\n      var _a;\n      if (Capacitor.getPlatform() == 'android') {\n        _this15.disableScrolling();\n      }\n      if (Capacitor.isNativePlatform()) {\n        (_a = _this15.resizeObserver) === null || _a === void 0 ? void 0 : _a.disconnect();\n      }\n      _this15.removeAllMapListeners();\n      return CapacitorGoogleMaps.destroy({\n        id: _this15.id\n      });\n    })();\n  }\n  /**\n   * Update the map camera configuration\n   *\n   * @param config\n   * @returns\n   */\n  setCamera(config) {\n    var _this16 = this;\n    return _asyncToGenerator(function* () {\n      return CapacitorGoogleMaps.setCamera({\n        id: _this16.id,\n        config\n      });\n    })();\n  }\n  getMapType() {\n    var _this17 = this;\n    return _asyncToGenerator(function* () {\n      const {\n        type\n      } = yield CapacitorGoogleMaps.getMapType({\n        id: _this17.id\n      });\n      return MapType[type];\n    })();\n  }\n  /**\n   * Sets the type of map tiles that should be displayed.\n   *\n   * @param mapType\n   * @returns\n   */\n  setMapType(mapType) {\n    var _this18 = this;\n    return _asyncToGenerator(function* () {\n      return CapacitorGoogleMaps.setMapType({\n        id: _this18.id,\n        mapType\n      });\n    })();\n  }\n  /**\n   * Sets whether indoor maps are shown, where available.\n   *\n   * @param enabled\n   * @returns\n   */\n  enableIndoorMaps(enabled) {\n    var _this19 = this;\n    return _asyncToGenerator(function* () {\n      return CapacitorGoogleMaps.enableIndoorMaps({\n        id: _this19.id,\n        enabled\n      });\n    })();\n  }\n  /**\n   * Controls whether the map is drawing traffic data, if available.\n   *\n   * @param enabled\n   * @returns\n   */\n  enableTrafficLayer(enabled) {\n    var _this20 = this;\n    return _asyncToGenerator(function* () {\n      return CapacitorGoogleMaps.enableTrafficLayer({\n        id: _this20.id,\n        enabled\n      });\n    })();\n  }\n  /**\n   * Show accessibility elements for overlay objects, such as Marker and Polyline.\n   *\n   * Only available on iOS.\n   *\n   * @param enabled\n   * @returns\n   */\n  enableAccessibilityElements(enabled) {\n    var _this21 = this;\n    return _asyncToGenerator(function* () {\n      return CapacitorGoogleMaps.enableAccessibilityElements({\n        id: _this21.id,\n        enabled\n      });\n    })();\n  }\n  /**\n   * Set whether the My Location dot and accuracy circle is enabled.\n   *\n   * @param enabled\n   * @returns\n   */\n  enableCurrentLocation(enabled) {\n    var _this22 = this;\n    return _asyncToGenerator(function* () {\n      return CapacitorGoogleMaps.enableCurrentLocation({\n        id: _this22.id,\n        enabled\n      });\n    })();\n  }\n  /**\n   * Set padding on the 'visible' region of the view.\n   *\n   * @param padding\n   * @returns\n   */\n  setPadding(padding) {\n    var _this23 = this;\n    return _asyncToGenerator(function* () {\n      return CapacitorGoogleMaps.setPadding({\n        id: _this23.id,\n        padding\n      });\n    })();\n  }\n  /**\n   * Get the map's current viewport latitude and longitude bounds.\n   *\n   * @returns {LatLngBounds}\n   */\n  getMapBounds() {\n    var _this24 = this;\n    return _asyncToGenerator(function* () {\n      return new LatLngBounds(yield CapacitorGoogleMaps.getMapBounds({\n        id: _this24.id\n      }));\n    })();\n  }\n  fitBounds(bounds, padding) {\n    var _this25 = this;\n    return _asyncToGenerator(function* () {\n      return CapacitorGoogleMaps.fitBounds({\n        id: _this25.id,\n        bounds,\n        padding\n      });\n    })();\n  }\n  initScrolling() {\n    const ionContents = document.getElementsByTagName('ion-content');\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let i = 0; i < ionContents.length; i++) {\n      ionContents[i].scrollEvents = true;\n    }\n    window.addEventListener('ionScroll', this.handleScrollEvent);\n    window.addEventListener('scroll', this.handleScrollEvent);\n    window.addEventListener('resize', this.handleScrollEvent);\n    if (screen.orientation) {\n      screen.orientation.addEventListener('change', () => {\n        setTimeout(this.updateMapBounds, 500);\n      });\n    } else {\n      window.addEventListener('orientationchange', () => {\n        setTimeout(this.updateMapBounds, 500);\n      });\n    }\n  }\n  disableScrolling() {\n    window.removeEventListener('ionScroll', this.handleScrollEvent);\n    window.removeEventListener('scroll', this.handleScrollEvent);\n    window.removeEventListener('resize', this.handleScrollEvent);\n    if (screen.orientation) {\n      screen.orientation.removeEventListener('change', () => {\n        setTimeout(this.updateMapBounds, 1000);\n      });\n    } else {\n      window.removeEventListener('orientationchange', () => {\n        setTimeout(this.updateMapBounds, 1000);\n      });\n    }\n  }\n  updateMapBounds() {\n    if (this.element) {\n      const mapRect = this.element.getBoundingClientRect();\n      CapacitorGoogleMaps.onScroll({\n        id: this.id,\n        mapBounds: {\n          x: mapRect.x,\n          y: mapRect.y,\n          width: mapRect.width,\n          height: mapRect.height\n        }\n      });\n    }\n  }\n  /*\n  private findContainerElement(): HTMLElement | null {\n    if (!this.element) {\n      return null;\n    }\n       let parentElement = this.element.parentElement;\n    while (parentElement !== null) {\n      if (window.getComputedStyle(parentElement).overflowY !== 'hidden') {\n        return parentElement;\n      }\n         parentElement = parentElement.parentElement;\n    }\n       return null;\n  }\n  */\n  /**\n   * Set the event listener on the map for 'onCameraIdle' events.\n   *\n   * @param callback\n   * @returns\n   */\n  setOnCameraIdleListener(callback) {\n    var _this26 = this;\n    return _asyncToGenerator(function* () {\n      if (_this26.onCameraIdleListener) {\n        _this26.onCameraIdleListener.remove();\n      }\n      if (callback) {\n        _this26.onCameraIdleListener = yield CapacitorGoogleMaps.addListener('onCameraIdle', _this26.generateCallback(callback));\n      } else {\n        _this26.onCameraIdleListener = undefined;\n      }\n    })();\n  }\n  /**\n   * Set the event listener on the map for 'onBoundsChanged' events.\n   *\n   * @param callback\n   * @returns\n   */\n  setOnBoundsChangedListener(callback) {\n    var _this27 = this;\n    return _asyncToGenerator(function* () {\n      if (_this27.onBoundsChangedListener) {\n        _this27.onBoundsChangedListener.remove();\n      }\n      if (callback) {\n        _this27.onBoundsChangedListener = yield CapacitorGoogleMaps.addListener('onBoundsChanged', _this27.generateCallback(callback));\n      } else {\n        _this27.onBoundsChangedListener = undefined;\n      }\n    })();\n  }\n  /**\n   * Set the event listener on the map for 'onCameraMoveStarted' events.\n   *\n   * @param callback\n   * @returns\n   */\n  setOnCameraMoveStartedListener(callback) {\n    var _this28 = this;\n    return _asyncToGenerator(function* () {\n      if (_this28.onCameraMoveStartedListener) {\n        _this28.onCameraMoveStartedListener.remove();\n      }\n      if (callback) {\n        _this28.onCameraMoveStartedListener = yield CapacitorGoogleMaps.addListener('onCameraMoveStarted', _this28.generateCallback(callback));\n      } else {\n        _this28.onCameraMoveStartedListener = undefined;\n      }\n    })();\n  }\n  /**\n   * Set the event listener on the map for 'onClusterClick' events.\n   *\n   * @param callback\n   * @returns\n   */\n  setOnClusterClickListener(callback) {\n    var _this29 = this;\n    return _asyncToGenerator(function* () {\n      if (_this29.onClusterClickListener) {\n        _this29.onClusterClickListener.remove();\n      }\n      if (callback) {\n        _this29.onClusterClickListener = yield CapacitorGoogleMaps.addListener('onClusterClick', _this29.generateCallback(callback));\n      } else {\n        _this29.onClusterClickListener = undefined;\n      }\n    })();\n  }\n  /**\n   * Set the event listener on the map for 'onClusterInfoWindowClick' events.\n   *\n   * @param callback\n   * @returns\n   */\n  setOnClusterInfoWindowClickListener(callback) {\n    var _this30 = this;\n    return _asyncToGenerator(function* () {\n      if (_this30.onClusterInfoWindowClickListener) {\n        _this30.onClusterInfoWindowClickListener.remove();\n      }\n      if (callback) {\n        _this30.onClusterInfoWindowClickListener = yield CapacitorGoogleMaps.addListener('onClusterInfoWindowClick', _this30.generateCallback(callback));\n      } else {\n        _this30.onClusterInfoWindowClickListener = undefined;\n      }\n    })();\n  }\n  /**\n   * Set the event listener on the map for 'onInfoWindowClick' events.\n   *\n   * @param callback\n   * @returns\n   */\n  setOnInfoWindowClickListener(callback) {\n    var _this31 = this;\n    return _asyncToGenerator(function* () {\n      if (_this31.onInfoWindowClickListener) {\n        _this31.onInfoWindowClickListener.remove();\n      }\n      if (callback) {\n        _this31.onInfoWindowClickListener = yield CapacitorGoogleMaps.addListener('onInfoWindowClick', _this31.generateCallback(callback));\n      } else {\n        _this31.onInfoWindowClickListener = undefined;\n      }\n    })();\n  }\n  /**\n   * Set the event listener on the map for 'onMapClick' events.\n   *\n   * @param callback\n   * @returns\n   */\n  setOnMapClickListener(callback) {\n    var _this32 = this;\n    return _asyncToGenerator(function* () {\n      if (_this32.onMapClickListener) {\n        _this32.onMapClickListener.remove();\n      }\n      if (callback) {\n        _this32.onMapClickListener = yield CapacitorGoogleMaps.addListener('onMapClick', _this32.generateCallback(callback));\n      } else {\n        _this32.onMapClickListener = undefined;\n      }\n    })();\n  }\n  /**\n   * Set the event listener on the map for 'onPolygonClick' events.\n   *\n   * @param callback\n   * @returns\n   */\n  setOnPolygonClickListener(callback) {\n    var _this33 = this;\n    return _asyncToGenerator(function* () {\n      if (_this33.onPolygonClickListener) {\n        _this33.onPolygonClickListener.remove();\n      }\n      if (callback) {\n        _this33.onPolygonClickListener = yield CapacitorGoogleMaps.addListener('onPolygonClick', _this33.generateCallback(callback));\n      } else {\n        _this33.onPolygonClickListener = undefined;\n      }\n    })();\n  }\n  /**\n   * Set the event listener on the map for 'onCircleClick' events.\n   *\n   * @param callback\n   * @returns\n   */\n  setOnCircleClickListener(callback) {\n    var _this34 = this;\n    return _asyncToGenerator(function* () {\n      if (_this34.onCircleClickListener) [_this34.onCircleClickListener.remove()];\n      if (callback) {\n        _this34.onCircleClickListener = yield CapacitorGoogleMaps.addListener('onCircleClick', _this34.generateCallback(callback));\n      } else {\n        _this34.onCircleClickListener = undefined;\n      }\n    })();\n  }\n  /**\n   * Set the event listener on the map for 'onMarkerClick' events.\n   *\n   * @param callback\n   * @returns\n   */\n  setOnMarkerClickListener(callback) {\n    var _this35 = this;\n    return _asyncToGenerator(function* () {\n      if (_this35.onMarkerClickListener) {\n        _this35.onMarkerClickListener.remove();\n      }\n      if (callback) {\n        _this35.onMarkerClickListener = yield CapacitorGoogleMaps.addListener('onMarkerClick', _this35.generateCallback(callback));\n      } else {\n        _this35.onMarkerClickListener = undefined;\n      }\n    })();\n  }\n  /**\n   * Set the event listener on the map for 'onPolylineClick' events.\n   *\n   * @param callback\n   * @returns\n   */\n  setOnPolylineClickListener(callback) {\n    var _this36 = this;\n    return _asyncToGenerator(function* () {\n      if (_this36.onPolylineClickListener) {\n        _this36.onPolylineClickListener.remove();\n      }\n      if (callback) {\n        _this36.onPolylineClickListener = yield CapacitorGoogleMaps.addListener('onPolylineClick', _this36.generateCallback(callback));\n      } else {\n        _this36.onPolylineClickListener = undefined;\n      }\n    })();\n  }\n  /**\n   * Set the event listener on the map for 'onMarkerDragStart' events.\n   *\n   * @param callback\n   * @returns\n   */\n  setOnMarkerDragStartListener(callback) {\n    var _this37 = this;\n    return _asyncToGenerator(function* () {\n      if (_this37.onMarkerDragStartListener) {\n        _this37.onMarkerDragStartListener.remove();\n      }\n      if (callback) {\n        _this37.onMarkerDragStartListener = yield CapacitorGoogleMaps.addListener('onMarkerDragStart', _this37.generateCallback(callback));\n      } else {\n        _this37.onMarkerDragStartListener = undefined;\n      }\n    })();\n  }\n  /**\n   * Set the event listener on the map for 'onMarkerDrag' events.\n   *\n   * @param callback\n   * @returns\n   */\n  setOnMarkerDragListener(callback) {\n    var _this38 = this;\n    return _asyncToGenerator(function* () {\n      if (_this38.onMarkerDragListener) {\n        _this38.onMarkerDragListener.remove();\n      }\n      if (callback) {\n        _this38.onMarkerDragListener = yield CapacitorGoogleMaps.addListener('onMarkerDrag', _this38.generateCallback(callback));\n      } else {\n        _this38.onMarkerDragListener = undefined;\n      }\n    })();\n  }\n  /**\n   * Set the event listener on the map for 'onMarkerDragEnd' events.\n   *\n   * @param callback\n   * @returns\n   */\n  setOnMarkerDragEndListener(callback) {\n    var _this39 = this;\n    return _asyncToGenerator(function* () {\n      if (_this39.onMarkerDragEndListener) {\n        _this39.onMarkerDragEndListener.remove();\n      }\n      if (callback) {\n        _this39.onMarkerDragEndListener = yield CapacitorGoogleMaps.addListener('onMarkerDragEnd', _this39.generateCallback(callback));\n      } else {\n        _this39.onMarkerDragEndListener = undefined;\n      }\n    })();\n  }\n  /**\n   * Set the event listener on the map for 'onMyLocationButtonClick' events.\n   *\n   * @param callback\n   * @returns\n   */\n  setOnMyLocationButtonClickListener(callback) {\n    var _this40 = this;\n    return _asyncToGenerator(function* () {\n      if (_this40.onMyLocationButtonClickListener) {\n        _this40.onMyLocationButtonClickListener.remove();\n      }\n      if (callback) {\n        _this40.onMyLocationButtonClickListener = yield CapacitorGoogleMaps.addListener('onMyLocationButtonClick', _this40.generateCallback(callback));\n      } else {\n        _this40.onMyLocationButtonClickListener = undefined;\n      }\n    })();\n  }\n  /**\n   * Set the event listener on the map for 'onMyLocationClick' events.\n   *\n   * @param callback\n   * @returns\n   */\n  setOnMyLocationClickListener(callback) {\n    var _this41 = this;\n    return _asyncToGenerator(function* () {\n      if (_this41.onMyLocationClickListener) {\n        _this41.onMyLocationClickListener.remove();\n      }\n      if (callback) {\n        _this41.onMyLocationClickListener = yield CapacitorGoogleMaps.addListener('onMyLocationClick', _this41.generateCallback(callback));\n      } else {\n        _this41.onMyLocationClickListener = undefined;\n      }\n    })();\n  }\n  /**\n   * Remove all event listeners on the map.\n   *\n   * @param callback\n   * @returns\n   */\n  removeAllMapListeners() {\n    var _this42 = this;\n    return _asyncToGenerator(function* () {\n      if (_this42.onBoundsChangedListener) {\n        _this42.onBoundsChangedListener.remove();\n        _this42.onBoundsChangedListener = undefined;\n      }\n      if (_this42.onCameraIdleListener) {\n        _this42.onCameraIdleListener.remove();\n        _this42.onCameraIdleListener = undefined;\n      }\n      if (_this42.onCameraMoveStartedListener) {\n        _this42.onCameraMoveStartedListener.remove();\n        _this42.onCameraMoveStartedListener = undefined;\n      }\n      if (_this42.onClusterClickListener) {\n        _this42.onClusterClickListener.remove();\n        _this42.onClusterClickListener = undefined;\n      }\n      if (_this42.onClusterInfoWindowClickListener) {\n        _this42.onClusterInfoWindowClickListener.remove();\n        _this42.onClusterInfoWindowClickListener = undefined;\n      }\n      if (_this42.onInfoWindowClickListener) {\n        _this42.onInfoWindowClickListener.remove();\n        _this42.onInfoWindowClickListener = undefined;\n      }\n      if (_this42.onMapClickListener) {\n        _this42.onMapClickListener.remove();\n        _this42.onMapClickListener = undefined;\n      }\n      if (_this42.onPolylineClickListener) {\n        _this42.onPolylineClickListener.remove();\n        _this42.onPolylineClickListener = undefined;\n      }\n      if (_this42.onMarkerClickListener) {\n        _this42.onMarkerClickListener.remove();\n        _this42.onMarkerClickListener = undefined;\n      }\n      if (_this42.onPolygonClickListener) {\n        _this42.onPolygonClickListener.remove();\n        _this42.onPolygonClickListener = undefined;\n      }\n      if (_this42.onCircleClickListener) {\n        _this42.onCircleClickListener.remove();\n        _this42.onCircleClickListener = undefined;\n      }\n      if (_this42.onMarkerDragStartListener) {\n        _this42.onMarkerDragStartListener.remove();\n        _this42.onMarkerDragStartListener = undefined;\n      }\n      if (_this42.onMarkerDragListener) {\n        _this42.onMarkerDragListener.remove();\n        _this42.onMarkerDragListener = undefined;\n      }\n      if (_this42.onMarkerDragEndListener) {\n        _this42.onMarkerDragEndListener.remove();\n        _this42.onMarkerDragEndListener = undefined;\n      }\n      if (_this42.onMyLocationButtonClickListener) {\n        _this42.onMyLocationButtonClickListener.remove();\n        _this42.onMyLocationButtonClickListener = undefined;\n      }\n      if (_this42.onMyLocationClickListener) {\n        _this42.onMyLocationClickListener.remove();\n        _this42.onMyLocationClickListener = undefined;\n      }\n    })();\n  }\n  generateCallback(callback) {\n    const mapId = this.id;\n    return data => {\n      if (data.mapId == mapId) {\n        callback(data);\n      }\n    };\n  }\n}","map":{"version":3,"names":["Capacitor","LatLngBounds","MapType","CapacitorGoogleMaps","MapCustomElement","HTMLElement","constructor","connectedCallback","innerHTML","getPlatform","style","overflow","overflowDiv","document","createElement","height","appendChild","customElements","define","GoogleMap","id","element","resizeObserver","handleScrollEvent","updateMapBounds","create","options","callback","_asyncToGenerator","newMap","Error","config","androidLiteMode","undefined","dataset","internalId","elementBounds","getElementBounds","width","x","y","devicePixelRatio","window","initScrolling","isNativePlatform","getMapBounds","_a","_b","mapRect","getBoundingClientRect","onDisplay","mapBounds","onResize","ionicPage","closest","addEventListener","setTimeout","lastState","isHidden","ResizeObserver","observe","Promise","resolve","reject","err","onMapReadyListener","addListener","data","mapId","remove","retries","boundsInterval","setInterval","console","warn","clearInterval","enableTouch","_this","disableTouch","_this2","enableClustering","minClusterSize","_this3","disableClustering","_this4","addMarker","marker","_this5","res","addMarkers","markers","_this6","ids","removeMarker","_this7","markerId","removeMarkers","_this8","markerIds","addPolygons","polygons","_this9","addPolylines","polylines","_this10","removePolygons","_this11","polygonIds","addCircles","circles","_this12","removeCircles","_this13","circleIds","removePolylines","_this14","polylineIds","destroy","_this15","disableScrolling","disconnect","removeAllMapListeners","setCamera","_this16","getMapType","_this17","type","setMapType","mapType","_this18","enableIndoorMaps","enabled","_this19","enableTrafficLayer","_this20","enableAccessibilityElements","_this21","enableCurrentLocation","_this22","setPadding","padding","_this23","_this24","fitBounds","bounds","_this25","ionContents","getElementsByTagName","i","length","scrollEvents","screen","orientation","removeEventListener","onScroll","setOnCameraIdleListener","_this26","onCameraIdleListener","generateCallback","setOnBoundsChangedListener","_this27","onBoundsChangedListener","setOnCameraMoveStartedListener","_this28","onCameraMoveStartedListener","setOnClusterClickListener","_this29","onClusterClickListener","setOnClusterInfoWindowClickListener","_this30","onClusterInfoWindowClickListener","setOnInfoWindowClickListener","_this31","onInfoWindowClickListener","setOnMapClickListener","_this32","onMapClickListener","setOnPolygonClickListener","_this33","onPolygonClickListener","setOnCircleClickListener","_this34","onCircleClickListener","setOnMarkerClickListener","_this35","onMarkerClickListener","setOnPolylineClickListener","_this36","onPolylineClickListener","setOnMarkerDragStartListener","_this37","onMarkerDragStartListener","setOnMarkerDragListener","_this38","onMarkerDragListener","setOnMarkerDragEndListener","_this39","onMarkerDragEndListener","setOnMyLocationButtonClickListener","_this40","onMyLocationButtonClickListener","setOnMyLocationClickListener","_this41","onMyLocationClickListener","_this42"],"sources":["C:/Users/evert/OneDrive/Documentos/GitHub/Movil/MyApp/node_modules/@capacitor/google-maps/dist/esm/map.js"],"sourcesContent":["import { Capacitor } from '@capacitor/core';\nimport { LatLngBounds, MapType } from './definitions';\nimport { CapacitorGoogleMaps } from './implementation';\nclass MapCustomElement extends HTMLElement {\n    constructor() {\n        super();\n    }\n    connectedCallback() {\n        this.innerHTML = '';\n        if (Capacitor.getPlatform() == 'ios') {\n            this.style.overflow = 'scroll';\n            this.style['-webkit-overflow-scrolling'] = 'touch';\n            const overflowDiv = document.createElement('div');\n            overflowDiv.style.height = '200%';\n            this.appendChild(overflowDiv);\n        }\n    }\n}\ncustomElements.define('capacitor-google-map', MapCustomElement);\nexport class GoogleMap {\n    constructor(id) {\n        this.element = null;\n        this.resizeObserver = null;\n        this.handleScrollEvent = () => this.updateMapBounds();\n        this.id = id;\n    }\n    /**\n     * Creates a new instance of a Google Map\n     * @param options\n     * @param callback\n     * @returns GoogleMap\n     */\n    static async create(options, callback) {\n        const newMap = new GoogleMap(options.id);\n        if (!options.element) {\n            throw new Error('container element is required');\n        }\n        if (options.config.androidLiteMode === undefined) {\n            options.config.androidLiteMode = false;\n        }\n        newMap.element = options.element;\n        newMap.element.dataset.internalId = options.id;\n        const elementBounds = await GoogleMap.getElementBounds(options.element);\n        options.config.width = elementBounds.width;\n        options.config.height = elementBounds.height;\n        options.config.x = elementBounds.x;\n        options.config.y = elementBounds.y;\n        options.config.devicePixelRatio = window.devicePixelRatio;\n        if (Capacitor.getPlatform() == 'android') {\n            newMap.initScrolling();\n        }\n        if (Capacitor.isNativePlatform()) {\n            options.element = {};\n            const getMapBounds = () => {\n                var _a, _b;\n                const mapRect = (_b = (_a = newMap.element) === null || _a === void 0 ? void 0 : _a.getBoundingClientRect()) !== null && _b !== void 0 ? _b : {};\n                return {\n                    x: mapRect.x,\n                    y: mapRect.y,\n                    width: mapRect.width,\n                    height: mapRect.height,\n                };\n            };\n            const onDisplay = () => {\n                CapacitorGoogleMaps.onDisplay({\n                    id: newMap.id,\n                    mapBounds: getMapBounds(),\n                });\n            };\n            const onResize = () => {\n                CapacitorGoogleMaps.onResize({\n                    id: newMap.id,\n                    mapBounds: getMapBounds(),\n                });\n            };\n            const ionicPage = newMap.element.closest('.ion-page');\n            if (Capacitor.getPlatform() === 'ios' && ionicPage) {\n                ionicPage.addEventListener('ionViewWillEnter', () => {\n                    setTimeout(() => {\n                        onDisplay();\n                    }, 100);\n                });\n                ionicPage.addEventListener('ionViewDidEnter', () => {\n                    setTimeout(() => {\n                        onDisplay();\n                    }, 100);\n                });\n            }\n            const lastState = {\n                width: elementBounds.width,\n                height: elementBounds.height,\n                isHidden: false,\n            };\n            newMap.resizeObserver = new ResizeObserver(() => {\n                if (newMap.element != null) {\n                    const mapRect = newMap.element.getBoundingClientRect();\n                    const isHidden = mapRect.width === 0 && mapRect.height === 0;\n                    if (!isHidden) {\n                        if (lastState.isHidden) {\n                            if (Capacitor.getPlatform() === 'ios' && !ionicPage) {\n                                onDisplay();\n                            }\n                        }\n                        else if (lastState.width !== mapRect.width ||\n                            lastState.height !== mapRect.height) {\n                            onResize();\n                        }\n                    }\n                    lastState.width = mapRect.width;\n                    lastState.height = mapRect.height;\n                    lastState.isHidden = isHidden;\n                }\n            });\n            newMap.resizeObserver.observe(newMap.element);\n        }\n        // small delay to allow for iOS WKWebView to setup corresponding element sub-scroll views ???\n        await new Promise((resolve, reject) => {\n            setTimeout(async () => {\n                try {\n                    await CapacitorGoogleMaps.create(options);\n                    resolve(undefined);\n                }\n                catch (err) {\n                    reject(err);\n                }\n            }, 200);\n        });\n        if (callback) {\n            const onMapReadyListener = await CapacitorGoogleMaps.addListener('onMapReady', (data) => {\n                if (data.mapId == newMap.id) {\n                    callback(data);\n                    onMapReadyListener.remove();\n                }\n            });\n        }\n        return newMap;\n    }\n    static async getElementBounds(element) {\n        return new Promise(resolve => {\n            let elementBounds = element.getBoundingClientRect();\n            if (elementBounds.width == 0) {\n                let retries = 0;\n                const boundsInterval = setInterval(function () {\n                    if (elementBounds.width == 0 && retries < 30) {\n                        elementBounds = element.getBoundingClientRect();\n                        retries++;\n                    }\n                    else {\n                        if (retries == 30) {\n                            console.warn('Map size could not be determined');\n                        }\n                        clearInterval(boundsInterval);\n                        resolve(elementBounds);\n                    }\n                }, 100);\n            }\n            else {\n                resolve(elementBounds);\n            }\n        });\n    }\n    /**\n     * Enable touch events on native map\n     *\n     * @returns void\n     */\n    async enableTouch() {\n        return CapacitorGoogleMaps.enableTouch({\n            id: this.id,\n        });\n    }\n    /**\n     * Disable touch events on native map\n     *\n     * @returns void\n     */\n    async disableTouch() {\n        return CapacitorGoogleMaps.disableTouch({\n            id: this.id,\n        });\n    }\n    /**\n     * Enable marker clustering\n     *\n     * @param minClusterSize - The minimum number of markers that can be clustered together.\n     * @defaultValue 4\n     *\n     * @returns void\n     */\n    async enableClustering(minClusterSize) {\n        return CapacitorGoogleMaps.enableClustering({\n            id: this.id,\n            minClusterSize,\n        });\n    }\n    /**\n     * Disable marker clustering\n     *\n     * @returns void\n     */\n    async disableClustering() {\n        return CapacitorGoogleMaps.disableClustering({\n            id: this.id,\n        });\n    }\n    /**\n     * Adds a marker to the map\n     *\n     * @param marker\n     * @returns created marker id\n     */\n    async addMarker(marker) {\n        const res = await CapacitorGoogleMaps.addMarker({\n            id: this.id,\n            marker,\n        });\n        return res.id;\n    }\n    /**\n     * Adds multiple markers to the map\n     *\n     * @param markers\n     * @returns array of created marker IDs\n     */\n    async addMarkers(markers) {\n        const res = await CapacitorGoogleMaps.addMarkers({\n            id: this.id,\n            markers,\n        });\n        return res.ids;\n    }\n    /**\n     * Remove marker from the map\n     *\n     * @param id id of the marker to remove from the map\n     * @returns\n     */\n    async removeMarker(id) {\n        return CapacitorGoogleMaps.removeMarker({\n            id: this.id,\n            markerId: id,\n        });\n    }\n    /**\n     * Remove markers from the map\n     *\n     * @param ids array of ids to remove from the map\n     * @returns\n     */\n    async removeMarkers(ids) {\n        return CapacitorGoogleMaps.removeMarkers({\n            id: this.id,\n            markerIds: ids,\n        });\n    }\n    async addPolygons(polygons) {\n        const res = await CapacitorGoogleMaps.addPolygons({\n            id: this.id,\n            polygons,\n        });\n        return res.ids;\n    }\n    async addPolylines(polylines) {\n        const res = await CapacitorGoogleMaps.addPolylines({\n            id: this.id,\n            polylines,\n        });\n        return res.ids;\n    }\n    async removePolygons(ids) {\n        return CapacitorGoogleMaps.removePolygons({\n            id: this.id,\n            polygonIds: ids,\n        });\n    }\n    async addCircles(circles) {\n        const res = await CapacitorGoogleMaps.addCircles({\n            id: this.id,\n            circles,\n        });\n        return res.ids;\n    }\n    async removeCircles(ids) {\n        return CapacitorGoogleMaps.removeCircles({\n            id: this.id,\n            circleIds: ids,\n        });\n    }\n    async removePolylines(ids) {\n        return CapacitorGoogleMaps.removePolylines({\n            id: this.id,\n            polylineIds: ids,\n        });\n    }\n    /**\n     * Destroy the current instance of the map\n     */\n    async destroy() {\n        var _a;\n        if (Capacitor.getPlatform() == 'android') {\n            this.disableScrolling();\n        }\n        if (Capacitor.isNativePlatform()) {\n            (_a = this.resizeObserver) === null || _a === void 0 ? void 0 : _a.disconnect();\n        }\n        this.removeAllMapListeners();\n        return CapacitorGoogleMaps.destroy({\n            id: this.id,\n        });\n    }\n    /**\n     * Update the map camera configuration\n     *\n     * @param config\n     * @returns\n     */\n    async setCamera(config) {\n        return CapacitorGoogleMaps.setCamera({\n            id: this.id,\n            config,\n        });\n    }\n    async getMapType() {\n        const { type } = await CapacitorGoogleMaps.getMapType({ id: this.id });\n        return MapType[type];\n    }\n    /**\n     * Sets the type of map tiles that should be displayed.\n     *\n     * @param mapType\n     * @returns\n     */\n    async setMapType(mapType) {\n        return CapacitorGoogleMaps.setMapType({\n            id: this.id,\n            mapType,\n        });\n    }\n    /**\n     * Sets whether indoor maps are shown, where available.\n     *\n     * @param enabled\n     * @returns\n     */\n    async enableIndoorMaps(enabled) {\n        return CapacitorGoogleMaps.enableIndoorMaps({\n            id: this.id,\n            enabled,\n        });\n    }\n    /**\n     * Controls whether the map is drawing traffic data, if available.\n     *\n     * @param enabled\n     * @returns\n     */\n    async enableTrafficLayer(enabled) {\n        return CapacitorGoogleMaps.enableTrafficLayer({\n            id: this.id,\n            enabled,\n        });\n    }\n    /**\n     * Show accessibility elements for overlay objects, such as Marker and Polyline.\n     *\n     * Only available on iOS.\n     *\n     * @param enabled\n     * @returns\n     */\n    async enableAccessibilityElements(enabled) {\n        return CapacitorGoogleMaps.enableAccessibilityElements({\n            id: this.id,\n            enabled,\n        });\n    }\n    /**\n     * Set whether the My Location dot and accuracy circle is enabled.\n     *\n     * @param enabled\n     * @returns\n     */\n    async enableCurrentLocation(enabled) {\n        return CapacitorGoogleMaps.enableCurrentLocation({\n            id: this.id,\n            enabled,\n        });\n    }\n    /**\n     * Set padding on the 'visible' region of the view.\n     *\n     * @param padding\n     * @returns\n     */\n    async setPadding(padding) {\n        return CapacitorGoogleMaps.setPadding({\n            id: this.id,\n            padding,\n        });\n    }\n    /**\n     * Get the map's current viewport latitude and longitude bounds.\n     *\n     * @returns {LatLngBounds}\n     */\n    async getMapBounds() {\n        return new LatLngBounds(await CapacitorGoogleMaps.getMapBounds({\n            id: this.id,\n        }));\n    }\n    async fitBounds(bounds, padding) {\n        return CapacitorGoogleMaps.fitBounds({\n            id: this.id,\n            bounds,\n            padding,\n        });\n    }\n    initScrolling() {\n        const ionContents = document.getElementsByTagName('ion-content');\n        // eslint-disable-next-line @typescript-eslint/prefer-for-of\n        for (let i = 0; i < ionContents.length; i++) {\n            ionContents[i].scrollEvents = true;\n        }\n        window.addEventListener('ionScroll', this.handleScrollEvent);\n        window.addEventListener('scroll', this.handleScrollEvent);\n        window.addEventListener('resize', this.handleScrollEvent);\n        if (screen.orientation) {\n            screen.orientation.addEventListener('change', () => {\n                setTimeout(this.updateMapBounds, 500);\n            });\n        }\n        else {\n            window.addEventListener('orientationchange', () => {\n                setTimeout(this.updateMapBounds, 500);\n            });\n        }\n    }\n    disableScrolling() {\n        window.removeEventListener('ionScroll', this.handleScrollEvent);\n        window.removeEventListener('scroll', this.handleScrollEvent);\n        window.removeEventListener('resize', this.handleScrollEvent);\n        if (screen.orientation) {\n            screen.orientation.removeEventListener('change', () => {\n                setTimeout(this.updateMapBounds, 1000);\n            });\n        }\n        else {\n            window.removeEventListener('orientationchange', () => {\n                setTimeout(this.updateMapBounds, 1000);\n            });\n        }\n    }\n    updateMapBounds() {\n        if (this.element) {\n            const mapRect = this.element.getBoundingClientRect();\n            CapacitorGoogleMaps.onScroll({\n                id: this.id,\n                mapBounds: {\n                    x: mapRect.x,\n                    y: mapRect.y,\n                    width: mapRect.width,\n                    height: mapRect.height,\n                },\n            });\n        }\n    }\n    /*\n    private findContainerElement(): HTMLElement | null {\n      if (!this.element) {\n        return null;\n      }\n  \n      let parentElement = this.element.parentElement;\n      while (parentElement !== null) {\n        if (window.getComputedStyle(parentElement).overflowY !== 'hidden') {\n          return parentElement;\n        }\n  \n        parentElement = parentElement.parentElement;\n      }\n  \n      return null;\n    }\n    */\n    /**\n     * Set the event listener on the map for 'onCameraIdle' events.\n     *\n     * @param callback\n     * @returns\n     */\n    async setOnCameraIdleListener(callback) {\n        if (this.onCameraIdleListener) {\n            this.onCameraIdleListener.remove();\n        }\n        if (callback) {\n            this.onCameraIdleListener = await CapacitorGoogleMaps.addListener('onCameraIdle', this.generateCallback(callback));\n        }\n        else {\n            this.onCameraIdleListener = undefined;\n        }\n    }\n    /**\n     * Set the event listener on the map for 'onBoundsChanged' events.\n     *\n     * @param callback\n     * @returns\n     */\n    async setOnBoundsChangedListener(callback) {\n        if (this.onBoundsChangedListener) {\n            this.onBoundsChangedListener.remove();\n        }\n        if (callback) {\n            this.onBoundsChangedListener = await CapacitorGoogleMaps.addListener('onBoundsChanged', this.generateCallback(callback));\n        }\n        else {\n            this.onBoundsChangedListener = undefined;\n        }\n    }\n    /**\n     * Set the event listener on the map for 'onCameraMoveStarted' events.\n     *\n     * @param callback\n     * @returns\n     */\n    async setOnCameraMoveStartedListener(callback) {\n        if (this.onCameraMoveStartedListener) {\n            this.onCameraMoveStartedListener.remove();\n        }\n        if (callback) {\n            this.onCameraMoveStartedListener = await CapacitorGoogleMaps.addListener('onCameraMoveStarted', this.generateCallback(callback));\n        }\n        else {\n            this.onCameraMoveStartedListener = undefined;\n        }\n    }\n    /**\n     * Set the event listener on the map for 'onClusterClick' events.\n     *\n     * @param callback\n     * @returns\n     */\n    async setOnClusterClickListener(callback) {\n        if (this.onClusterClickListener) {\n            this.onClusterClickListener.remove();\n        }\n        if (callback) {\n            this.onClusterClickListener = await CapacitorGoogleMaps.addListener('onClusterClick', this.generateCallback(callback));\n        }\n        else {\n            this.onClusterClickListener = undefined;\n        }\n    }\n    /**\n     * Set the event listener on the map for 'onClusterInfoWindowClick' events.\n     *\n     * @param callback\n     * @returns\n     */\n    async setOnClusterInfoWindowClickListener(callback) {\n        if (this.onClusterInfoWindowClickListener) {\n            this.onClusterInfoWindowClickListener.remove();\n        }\n        if (callback) {\n            this.onClusterInfoWindowClickListener =\n                await CapacitorGoogleMaps.addListener('onClusterInfoWindowClick', this.generateCallback(callback));\n        }\n        else {\n            this.onClusterInfoWindowClickListener = undefined;\n        }\n    }\n    /**\n     * Set the event listener on the map for 'onInfoWindowClick' events.\n     *\n     * @param callback\n     * @returns\n     */\n    async setOnInfoWindowClickListener(callback) {\n        if (this.onInfoWindowClickListener) {\n            this.onInfoWindowClickListener.remove();\n        }\n        if (callback) {\n            this.onInfoWindowClickListener = await CapacitorGoogleMaps.addListener('onInfoWindowClick', this.generateCallback(callback));\n        }\n        else {\n            this.onInfoWindowClickListener = undefined;\n        }\n    }\n    /**\n     * Set the event listener on the map for 'onMapClick' events.\n     *\n     * @param callback\n     * @returns\n     */\n    async setOnMapClickListener(callback) {\n        if (this.onMapClickListener) {\n            this.onMapClickListener.remove();\n        }\n        if (callback) {\n            this.onMapClickListener = await CapacitorGoogleMaps.addListener('onMapClick', this.generateCallback(callback));\n        }\n        else {\n            this.onMapClickListener = undefined;\n        }\n    }\n    /**\n     * Set the event listener on the map for 'onPolygonClick' events.\n     *\n     * @param callback\n     * @returns\n     */\n    async setOnPolygonClickListener(callback) {\n        if (this.onPolygonClickListener) {\n            this.onPolygonClickListener.remove();\n        }\n        if (callback) {\n            this.onPolygonClickListener = await CapacitorGoogleMaps.addListener('onPolygonClick', this.generateCallback(callback));\n        }\n        else {\n            this.onPolygonClickListener = undefined;\n        }\n    }\n    /**\n     * Set the event listener on the map for 'onCircleClick' events.\n     *\n     * @param callback\n     * @returns\n     */\n    async setOnCircleClickListener(callback) {\n        if (this.onCircleClickListener)\n            [this.onCircleClickListener.remove()];\n        if (callback) {\n            this.onCircleClickListener = await CapacitorGoogleMaps.addListener('onCircleClick', this.generateCallback(callback));\n        }\n        else {\n            this.onCircleClickListener = undefined;\n        }\n    }\n    /**\n     * Set the event listener on the map for 'onMarkerClick' events.\n     *\n     * @param callback\n     * @returns\n     */\n    async setOnMarkerClickListener(callback) {\n        if (this.onMarkerClickListener) {\n            this.onMarkerClickListener.remove();\n        }\n        if (callback) {\n            this.onMarkerClickListener = await CapacitorGoogleMaps.addListener('onMarkerClick', this.generateCallback(callback));\n        }\n        else {\n            this.onMarkerClickListener = undefined;\n        }\n    }\n    /**\n     * Set the event listener on the map for 'onPolylineClick' events.\n     *\n     * @param callback\n     * @returns\n     */\n    async setOnPolylineClickListener(callback) {\n        if (this.onPolylineClickListener) {\n            this.onPolylineClickListener.remove();\n        }\n        if (callback) {\n            this.onPolylineClickListener = await CapacitorGoogleMaps.addListener('onPolylineClick', this.generateCallback(callback));\n        }\n        else {\n            this.onPolylineClickListener = undefined;\n        }\n    }\n    /**\n     * Set the event listener on the map for 'onMarkerDragStart' events.\n     *\n     * @param callback\n     * @returns\n     */\n    async setOnMarkerDragStartListener(callback) {\n        if (this.onMarkerDragStartListener) {\n            this.onMarkerDragStartListener.remove();\n        }\n        if (callback) {\n            this.onMarkerDragStartListener = await CapacitorGoogleMaps.addListener('onMarkerDragStart', this.generateCallback(callback));\n        }\n        else {\n            this.onMarkerDragStartListener = undefined;\n        }\n    }\n    /**\n     * Set the event listener on the map for 'onMarkerDrag' events.\n     *\n     * @param callback\n     * @returns\n     */\n    async setOnMarkerDragListener(callback) {\n        if (this.onMarkerDragListener) {\n            this.onMarkerDragListener.remove();\n        }\n        if (callback) {\n            this.onMarkerDragListener = await CapacitorGoogleMaps.addListener('onMarkerDrag', this.generateCallback(callback));\n        }\n        else {\n            this.onMarkerDragListener = undefined;\n        }\n    }\n    /**\n     * Set the event listener on the map for 'onMarkerDragEnd' events.\n     *\n     * @param callback\n     * @returns\n     */\n    async setOnMarkerDragEndListener(callback) {\n        if (this.onMarkerDragEndListener) {\n            this.onMarkerDragEndListener.remove();\n        }\n        if (callback) {\n            this.onMarkerDragEndListener = await CapacitorGoogleMaps.addListener('onMarkerDragEnd', this.generateCallback(callback));\n        }\n        else {\n            this.onMarkerDragEndListener = undefined;\n        }\n    }\n    /**\n     * Set the event listener on the map for 'onMyLocationButtonClick' events.\n     *\n     * @param callback\n     * @returns\n     */\n    async setOnMyLocationButtonClickListener(callback) {\n        if (this.onMyLocationButtonClickListener) {\n            this.onMyLocationButtonClickListener.remove();\n        }\n        if (callback) {\n            this.onMyLocationButtonClickListener =\n                await CapacitorGoogleMaps.addListener('onMyLocationButtonClick', this.generateCallback(callback));\n        }\n        else {\n            this.onMyLocationButtonClickListener = undefined;\n        }\n    }\n    /**\n     * Set the event listener on the map for 'onMyLocationClick' events.\n     *\n     * @param callback\n     * @returns\n     */\n    async setOnMyLocationClickListener(callback) {\n        if (this.onMyLocationClickListener) {\n            this.onMyLocationClickListener.remove();\n        }\n        if (callback) {\n            this.onMyLocationClickListener = await CapacitorGoogleMaps.addListener('onMyLocationClick', this.generateCallback(callback));\n        }\n        else {\n            this.onMyLocationClickListener = undefined;\n        }\n    }\n    /**\n     * Remove all event listeners on the map.\n     *\n     * @param callback\n     * @returns\n     */\n    async removeAllMapListeners() {\n        if (this.onBoundsChangedListener) {\n            this.onBoundsChangedListener.remove();\n            this.onBoundsChangedListener = undefined;\n        }\n        if (this.onCameraIdleListener) {\n            this.onCameraIdleListener.remove();\n            this.onCameraIdleListener = undefined;\n        }\n        if (this.onCameraMoveStartedListener) {\n            this.onCameraMoveStartedListener.remove();\n            this.onCameraMoveStartedListener = undefined;\n        }\n        if (this.onClusterClickListener) {\n            this.onClusterClickListener.remove();\n            this.onClusterClickListener = undefined;\n        }\n        if (this.onClusterInfoWindowClickListener) {\n            this.onClusterInfoWindowClickListener.remove();\n            this.onClusterInfoWindowClickListener = undefined;\n        }\n        if (this.onInfoWindowClickListener) {\n            this.onInfoWindowClickListener.remove();\n            this.onInfoWindowClickListener = undefined;\n        }\n        if (this.onMapClickListener) {\n            this.onMapClickListener.remove();\n            this.onMapClickListener = undefined;\n        }\n        if (this.onPolylineClickListener) {\n            this.onPolylineClickListener.remove();\n            this.onPolylineClickListener = undefined;\n        }\n        if (this.onMarkerClickListener) {\n            this.onMarkerClickListener.remove();\n            this.onMarkerClickListener = undefined;\n        }\n        if (this.onPolygonClickListener) {\n            this.onPolygonClickListener.remove();\n            this.onPolygonClickListener = undefined;\n        }\n        if (this.onCircleClickListener) {\n            this.onCircleClickListener.remove();\n            this.onCircleClickListener = undefined;\n        }\n        if (this.onMarkerDragStartListener) {\n            this.onMarkerDragStartListener.remove();\n            this.onMarkerDragStartListener = undefined;\n        }\n        if (this.onMarkerDragListener) {\n            this.onMarkerDragListener.remove();\n            this.onMarkerDragListener = undefined;\n        }\n        if (this.onMarkerDragEndListener) {\n            this.onMarkerDragEndListener.remove();\n            this.onMarkerDragEndListener = undefined;\n        }\n        if (this.onMyLocationButtonClickListener) {\n            this.onMyLocationButtonClickListener.remove();\n            this.onMyLocationButtonClickListener = undefined;\n        }\n        if (this.onMyLocationClickListener) {\n            this.onMyLocationClickListener.remove();\n            this.onMyLocationClickListener = undefined;\n        }\n    }\n    generateCallback(callback) {\n        const mapId = this.id;\n        return (data) => {\n            if (data.mapId == mapId) {\n                callback(data);\n            }\n        };\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}